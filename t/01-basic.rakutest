use Test;
use Version::Repology;

plan 36;

my $v = Version::Repology.new("1.0foo.bar");
isa-ok $v, Version::Repology;

is $v, "1.0.f.b", 'is stringification correct';
is $v.raku, 'Version::Repology.new("1.0foo.bar")', 'is .raku ok';
is-deeply $v.parts, (1,0,"f","b"), 'are the parts ok';
is-deeply $v.ranks, (non-zero, zero, letter-suffix, pre-release),
  'are the ranks ok';
is-deeply $v.bound, zero, 'default bound logic ok';

is-deeply $v cmp $v,  Same, 'can we compare with cmp';
is-deeply $v eqv $v,  True, 'can we compare with eqv';
is-deeply $v  == $v,  True, 'can we compare with ==';
is-deeply $v  <  $v, False, 'can we compare with <';
is-deeply $v  <= $v,  True, 'can we compare with <=';
is-deeply $v  >= $v,  True, 'can we compare with >=';
is-deeply $v  >  $v, False, 'can we compare with >';
is-deeply $v  != $v, False, 'can we compare with !=';

my $z = Version::Repology.new("");
isa-ok $v, Version::Repology;

is-deeply $v cmp $z,  More, 'can we compare z with cmp';
is-deeply $v eqv $z, False, 'can we compare z with eqv';
is-deeply $v  == $z, False, 'can we compare z with ==';
is-deeply $v  <  $z, False, 'can we compare z with <';
is-deeply $v  <= $z, False, 'can we compare z with <=';
is-deeply $v  >= $z,  True, 'can we compare z with >=';
is-deeply $v  >  $z,  True, 'can we compare z with >';
is-deeply $v  != $z,  True, 'can we compare z with !=';

for \(:upper-bound), \(:bound<upper>) -> \c {
    my $u = Version::Repology.new("1.0", |c);
    isa-ok $u, Version::Repology;
    is-deeply $u.bound, upper-bound, 'did we get an upper-bound';
}

for \(:lower-bound), \(:bound<lower>) -> \c {
    my $l = Version::Repology.new("1.0", |c);
    isa-ok $l, Version::Repology;
    is-deeply $l.bound, lower-bound, 'did we get a lower-bound';
}

my $no0 = Version::Repology.new("0.0.1", :no-leading-zero);
isa-ok $v, Version::Repology;
is $no0, "1", 'did the leading zeroes get removed';

my $lza1 = Version::Repology.new(
  "4.5.14",
  :additional-special( %(:r(post-release) ) ),
  :leading-zero-alpha
);
isa-ok $v, Version::Repology;

my $lza2 = Version::Repology.new(
  "4.09-r1",
  :additional-special( %(:r(post-release) ) ),
  :leading-zero-alpha
);
isa-ok $v, Version::Repology;

is-deeply $lza1.cmp($lza2), More, 'did 09 get compared alphabatically';

# vim: expandtab shiftwidth=4
